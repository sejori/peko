{
  "version": 3,
  "sources": ["../../src/pages/About.ts", "../../src/components/Layout.ts", "../../src/components/App.ts", "../../src/components/List.ts", "../../src/hooks/useLocalState.ts"],
  "sourcesContent": ["import { html } from \"htm/preact\";\n\nimport Layout from \"../components/Layout.ts\";\nimport App from \"../components/App.ts\";\n\nconst About = (props: Record<string, unknown>) => {\n  return html`\n    <${Layout} navLink=\"\" navColor=\"blueviolet\">\n      <div style=\"display: flex; justify-content: space-around; flex-wrap: wrap;\">\n        <p style=\"margin:5px\"><strong>Request time:</strong> ${\n          props.request_time\n        }</p>\n        <p style=\"margin:5px\"><strong>Hydration time:</strong> ${Date.now()}</p>\n        <p style=\"margin:5px\"><strong>Served from:</strong> ${\n          props.DENO_REGION ? props.DENO_REGION : \"localhost\"\n        }</p>\n      </div>\n\n      <img src=\"/assets/lighthouse-score.png\" alt=\"lighthouse-score\" />\n\n      <p>\n        This website is appified with the Preact JavaScript library.\n        It even uses localStorage to store state locally between page loads \uD83E\uDD2F.\n        Check out the \uD83D\uDC49 <a href=\"https://github.com/sejori/peko/tree/main/example/preactSSR\">source code here</a> \uD83D\uDC48.\n      </p>\n\n      <${App} />\n    </${Layout}>\n  `;\n};\n\nexport default About;\n", "import { html } from \"htm/preact\";\n\nconst Layout = ({\n  navColor,\n  navLink,\n  children,\n}: {\n  navColor: string;\n  navLink: string;\n  children: unknown;\n}) => {\n  return html`\n    <nav style=${navStyle(navColor)}>\n      <div class=\"container align-center\">\n        <img\n          height=\"200px\"\n          width=\"1000px\"\n          style=\"max-width:100%; margin: 1rem;\"\n          src=\"https://raw.githubusercontent.com/sejori/peko/main/example/preactSSR/assets/logo_dark_alpha.webp\"\n          alt=\"peko-logo\"\n        />\n        <h1 style=\"text-align: center;\">\n          Featherweight <a href=\"/${navLink}\" style=${navLinkStyle}>apps</a>\n        </h1>\n        <h2 style=\"text-align: center;\">on the edge \uD83D\uDC23\u26A1</h2>\n      </div>\n    </nav>\n    <main style=\"padding: 1rem;\" class=\"container\">${children}</main>\n    <footer style=${footerStyle}>\n      <div class=\"container row\">\n        <a style=${footerLinkStyle} href=\"https://github.com/sebringrose/peko\">\n          <img\n            src=\"https://raw.githubusercontent.com/edent/SuperTinyIcons/master/images/svg/github.svg\"\n            width=\"100\"\n            height=\"100\"\n            alt=\"GitHub\"\n          />\n          Source repo\n        </a>\n        <a\n          class=\"align-center\"\n          style=${footerLinkStyle}\n          href=\"https://doc.deno.land/https://deno.land/x/peko/mod.ts\"\n        >\n          <img\n            src=\"https://raw.githubusercontent.com/denolib/high-res-deno-logo/master/deno_hr_circle.svg\"\n            width=\"100\"\n            height=\"100\"\n            alt=\"Deno\"\n          />\n          API docs\n        </a>\n      </div>\n      <div class=\"container row\">\n        <a style=${footerLinkStyle} href=\"/\">Home</a>\n        <a style=${footerLinkStyle} href=\"/about\">About</a>\n      </div>\n      <p style=\"margin: 10px; text-align: center\">\n        Made by <a href=\"https://thesebsite.com\">Sejori</a>\n      </p>\n    </footer>\n  `;\n};\n\nconst navStyle = (navColor: string) => `\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: white;\n  background-color: ${navColor};\n  padding-bottom: 20px;\n`;\n\nconst navLinkStyle = `\n  color: white;\n`;\n\nconst footerStyle = `\n  padding-top: 20px;\n`;\n\nconst footerLinkStyle = `\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 1rem;\n  padding: 0px 5px;\n  margin-bottom: 1rem;\n`;\n\nexport default Layout;\n", "import { useState, useEffect } from \"preact/hooks\";\nimport { html } from \"htm/preact\";\nimport List from \"./List.ts\";\nimport { useLocalState } from \"../hooks/useLocalState.ts\";\n\nconst App = () => {\n  const [dataArray, setDataArray] = useLocalState(\"dataArray\");\n  const [latestEvent, setLatestEvent] = useState(0);\n\n  useEffect(() => {\n    const sse = new EventSource(\"/sse\");\n    sse.onmessage = (e) => {\n      const eventData = JSON.parse(e.data);\n      setLatestEvent(eventData.detail);\n      console.log(e);\n    };\n    sse.onerror = (e) => {\n      sse.close();\n      console.log(e);\n    };\n    document.body.addEventListener(\"unload\", () => sse.close());\n    return () => sse.close();\n  }, []);\n\n  return html`\n    <div style=\"margin: 2rem 0;\">\n      <p><strong>Latest random number from server: </strong> ${latestEvent}</p>\n\n      <${List} data=${dataArray} />\n\n      <button\n        style=${btnLgStyle}\n        onClick=${() =>\n          setDataArray((dataArray: string[]) => [\n            ...dataArray,\n            `Item ${dataArray.length}`,\n          ])}\n      >\n        add item\n      </button>\n      <button\n        style=${btnLgStyle}\n        onClick=${() =>\n          setDataArray((dataArray: string[]) =>\n            dataArray.slice(0, dataArray.length - 1)\n          )}\n      >\n        remove item\n      </button>\n    </div>\n  `;\n};\n\nconst btnLgStyle = `\n    margin: 0.5rem;  \n    padding: 0.5rem;\n    font-size: 1rem;\n`;\n\nexport default App;\n", "import { useState } from \"preact/hooks\";\nimport { html } from \"htm/preact\";\n\nconst List = ({ data }: { data: string[] }) => {\n  // takes a data prop\n  // how many clicks have we counted? Default to 0\n  const [count, setCount] = useState(0);\n\n  // shared event handler\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n\n  return html`\n    <div>\n      <ul>\n        ${data &&\n        data.map(\n          (i: string) => html`\n            <li>${i}: <button onClick=${handleClick}>Click me</button></li>\n          `\n        )}\n      </ul>\n      <p>\n        <strong>${count} ${count === 1 ? \"click\" : \"clicks\"} counted</strong>\n      </p>\n    </div>\n  `;\n};\n\nexport default List;\n", "import { useState, useEffect } from \"preact/hooks\";\n\n// INITIAL STATE\nconst initialState: Record<string, unknown> = {\n  dataArray: [\"Item 0\", \"Item 1\", \"Item 2\"],\n};\n\n// listeners object stores arrays of all state variable setters for each key\nconst listeners: Record<string, ((x: unknown) => unknown)[]> = {};\nObject.keys(initialState).forEach((key) => (listeners[key] = []));\n\n/**\n *\n * @param {string} key state variable name\n * @returns [state, setState]\n */\nconst useLocalState = (key: string) => {\n  // return regular state if no localStorage (server-side renders)\n  if (typeof localStorage === \"undefined\") return useState(initialState[key]);\n\n  const [state, setState] = useState(getLocalStateValue(key));\n  listeners[key].push(setState);\n\n  useEffect(() => {\n    try {\n      setLocalStateValue(key, state);\n    } catch (e) {\n      console.log(e);\n    }\n\n    // remove setState from listener on component unmount\n    return () => listeners[key].filter((listener) => listener !== setState);\n  }, [state]);\n\n  return [state, setState];\n};\n\n/**\n *\n * @returns initialState object with updated values from locally stored state\n */\nconst getLocalState = () => {\n  const localState = localStorage.getItem(\"localState\");\n  return localState\n    ? { ...initialState, ...JSON.parse(localState) }\n    : initialState;\n};\n\n/**\n *\n * @param {string} key state variable name\n * @returns {*} state variable value\n */\nconst getLocalStateValue = (key: string) => {\n  const localState = getLocalState();\n  if (localState[key]) return localState[key];\n  throw new Error(\n    `Key \"${key}\" does not exist in localState. Make sure it is added to initialState in /src/hooks/localstate.js.`\n  );\n};\n\n/**\n *\n * @param {string} key state variable name\n * @param {*} value state variable value\n */\nconst setLocalStateValue = (key: string, value: unknown) => {\n  // update all state listeners before setting in case we cannot set localStorage\n  // (e.g. private browsing iOS Safari)\n  listeners[key].forEach((setState) => setState(value));\n\n  // set localStorage\n  return localStorage.setItem(\n    \"localState\",\n    JSON.stringify({ ...getLocalState(), [key]: value })\n  );\n};\n\nexport { useLocalState };\n"],
  "mappings": "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",
  "names": ["html", "useState", "useEffect", "html", "html", "useState", "useState", "useEffect", "html", "dataArray", "html"]
}
